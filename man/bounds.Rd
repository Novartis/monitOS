% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bounds.R
\name{bounds}
\alias{bounds}
\title{Adapted version of TF monitoring procedure which considers the same detrimental OS log-HR
at each analysis}
\usage{
bounds(
  events,
  power_int = 0.9,
  t1error = 0.025,
  lhr_null = log(1.3),
  lhr_alt = log(0.9)
)
}
\arguments{
\item{events}{Vector. Target number of OS events at each analysis}

\item{power_int}{Scalar. Should be NULL if the user specifies t1error. If t1error is NULL, the user specifies
the required marginal power to rule out lhr_null when lhr = lhr_alt at the final analysis
(and at each interim analysis too). This specification then drives the false positive risks we are
willing to accept at each analysis}

\item{t1error}{Scalar or Vector. Should be NULL if the user specifies power. If power
is NULL, the user must input this argument. User can specify either a scalar or a
vector of length K. If the user inputs a scalar, this is interpreted as the one-sided
type I error rate agreed with the HA for the final analysis. We then
calculate the attained power under lhr_alt and require this at every interim analysis. If the user
inputs t1error as a vector argument, this is interpreted as the sequence of (marginal, one-sided) type I error
rates we are willing to accept at each OS analysis.}

\item{lhr_null}{Scalar. The minimum unacceptable OS log-HR}

\item{lhr_alt}{Scalar. Plausible clinically relevant beneficial effect of treatment (log-HR)}
}
\value{
List. A list object that contains `t1error` (one-sided marginal type I error rates at each analysis),
`CI_level_monit_null` (level of two-sided CIs used to rule out lhr_null at each analysis),
`lhr_null` (minimum unacceptable OS log-HR), `lhr_alt` (plausible clinically relevant log-HR)
`lhr_con` (log-HR for 'continuation'), `Continuation_Thres_Posterior` ('continuation' thresholds
expressed as posterior probabilities true log-HR exceeds lhr_null), `Continuation_Thres_PredProb`
('continuation' thresholds expressed as predictive probabilities of ruling out
lhr_null at final analysis). Also prints a table with this information.
}
\description{
Calculates bounds of versions of the Fleming monitoring procedure where lhr_null
and lhr_alt are specified by the user and are both kept constant throughout the
procedure (instead the false positive or false negative risks vary across analyses)
}
\examples{
res <- bounds(events=c(20, 50, 60),
              power=0.9,
              t1error=0.025,
              lhr_null = log(1.333),
              lhr_alt = log(0.9))
}
