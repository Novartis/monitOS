# This file is a template, and might need editing before it works on your project.
# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages
#
# You can copy and paste this template into a new `.gitlab-ci.yml` file.
# You should not add this template to an existing `.gitlab-ci.yml` file by using the `include:` keyword.
#
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

stages:          # List of stages for jobs, and their order of execution
  - build
  - test
  - deploy

before_script: ## Check this part

  - export http_proxy=http://proxy.eu.novartis.net:2010/
  - export https_proxy=http://proxy.eu.novartis.net:2010/
  - export NOT_CRAN=true
  - export CCACHE_DIR=/tmp
  - export PATH=/usr/lib/ccache:$PATH

Build:
  stage: build
  script:
    - R CMD build . --no-build-vignettes --no-manual
    - PKG_FILE_NAME=$(ls -1t *.tar.gz | head -n 1) && echo ${PKG_FILE_NAME}
    - mv "${PKG_FILE_NAME}" monitOS-source-fast.tar.gz
  artifacts:
    name: "build-fast"
    expire_in: 1 day
    paths:
       - monitOS-source-fast.tar.gz

Check:
  stage: test
  script:
    - tar xf "monitOS-source-fast.tar.gz"
    - export NOT_CRAN=false
    - R CMD check monitOS --no-build-vignettes --no-manual
    - rm -rf monitOS.Rcheck/monitOS
  artifacts:
    name: "Rcheck-${CI_JOB_NAME}-${CI_COMMIT_REF_NAME}"
    expire_in: 1 week
    paths:
      - monitOS.Rcheck/

Deploy:
  stage: deploy
  only:
    - main
  script:
    - R CMD build . --as-cran
    - PKG_FILE_NAME=$(ls -1t *.tar.gz | head -n 1) && echo ${PKG_FILE_NAME}
    - mv "${PKG_FILE_NAME}" monitOS-source.tar.gz
    - R -e 'rsconnect::deployApp(appDir = here::here(), appId = 2946, account = "corolth1", server = "rsconnect-prod.dit.eu.novartis.net")' -y
  dependencies: []
  artifacts:
    name: "monitOS_source"
    expire_in: 1 month
    paths:
      - monitOS-source.tar.gz

