stages:          # List of stages for jobs, and their order of execution
  - setup
  - build
  - check
  - coverage
  - rhub
  - deploy

before_script: ## Check this part

  - export http_proxy=http://proxy.eu.novartis.net:2010/
  - export https_proxy=http://proxy.eu.novartis.net:2010/
  - export NOT_CRAN=true
  - export CCACHE_DIR=/tmp
  - export PATH=/usr/lib/ccache:$PATH


# <DON'T REMOVE!>
variables:
  RENV_PATHS_CACHE: "~/.renv/cache"
  RENV_PATHS_LIBRARY_ROOT: "~/.renv/library"

# <DON'T REMOVE!>
cache:
  key: ${CI_JOB_NAME}
  paths:
    - ${RENV_PATHS_CACHE}
    - ${RENV_PATHS_LIBRARY}

Setup:
  stage: setup
  script:
    - >
      if [ ! -d "$RENV_PATHS_CACHE" ]; then
        mkdir -p $RENV_PATHS_CACHE;
        echo "Installing RENV_PATHS_CACHE in ${RENV_PATHS_CACHE}...";
      fi
    - Rscript -e "if (!requireNamespace('renv', quietly = TRUE)) install.packages('renv');"
    - Rscript -e "renv::restore();"

Check:
  stage: check
  allow_failure: true
  only:
  - main
  - dev
  script:
    - Rscript -e "if (!requireNamespace('devtools', quietly = TRUE)) install.packages('devtools');"
    - Rscript -e 'devtools::check()'

Build:
  stage: build
  script:
    - R CMD build . --as-cran
    - PKG_FILE_NAME=$(ls -1t *.tar.gz | head -n 1) && echo ${PKG_FILE_NAME}
    - mv "${PKG_FILE_NAME}" monitOS-source.tar.gz
  artifacts:
    name: "monitOS_source"
    expire_in: 1 month
    paths:
      - monitOS-source.tar.gz

Coverage:
    stage: coverage
    only:
        - master
        - dev
    allow_failure: true
    script:
        - Rscript -e "if (!requireNamespace('covr', quietly = TRUE)) install.packages('covr');"
        - Rscript -e "if (!requireNamespace('DT', quietly = TRUE)) install.packages('DT');"
        - Rscript -e 'covr::gitlab(quiet = FALSE)'

RHUB:
    stage: rhub
    only:
    - master
    - dev
    allow_failure: true
    script:
    - Rscript -e "if (!requireNamespace('devtools', quietly = TRUE)) install.packages('devtools');"
    - Rscript -e 'devtools::check_rhub()'

Deploy:
  stage: deploy
  only:
    - main
  script:
    - R -e 'source("inst/shiny/deploy.R"); deploy_app_rsc()'

